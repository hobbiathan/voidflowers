<html>
  <head>
    <title> haute archive </title>
    <script>
      console.log("flower.js is loaded")

      var plantStep = 0;

      //----------------------------------------------------------------------------//

      function setupGrowingPlant(parentDiv, growing) {
      	var plantLineLength = 12;
      	var plantCharacter = [];
      	var plantWidth = 80;
      	var plantHeight = 9;

      	// we're using a 2d grid of characters which will then be converted to
      	// strings at the end
      	// initialize the grid of characters
      	plantCharacter = [];
      	for (var x = 0; x < plantWidth; x ++) {
      		plantCharacter.push(new Array(plantHeight));
      		for (var y = 0; y < plantHeight - 2; y ++) {
      			plantCharacter[x][y] = ' ';
      		}
      	}
      	makeInitialDisplay();

      	// draw plants here
      	if (growing) {
      		makeGround();

      		makePlants();

      		//makeClouds();
      	}
      	// if we've wandered out of the plains / forest / key area
      	if (!growing) {
      		makeInitialDisplay();
      	}

      	var string = convertArrayToHTML(plantCharacter);
      	string = string.replace(/ /g, '&nbsp'); // replace spaces with nonbreaking spaces
      	parentDiv.innerHTML = string;

      	if (growing)
      		plantStep ++;


      	function makeGround() {
      		var type = ['^', '-'];
      		var margin = 10;
      		for (var x = 0; x < plantWidth; x ++) {
      			if ((x > margin) && (x < plantWidth - margin))
      				plantCharacter[x][plantHeight - 3] = pick(type);
      			else
      				plantCharacter[x][plantHeight - 3] = '-';
      		}
      	}


      	function makePlants() {
      		var count = dRandomIn(2, 4);
      		console.log("\nmaking " + count + " plants");
      		var time = plantStep;
      		var placement = 11;
      		while (placement < plantWidth - 12) {
      			var flowering = dRandomInt(2);
      			var maxHeight;
      			var startOffset = -dRandomInt(5) - 1;
      			console.log("start offset = " + startOffset);
      			if (flowering == 0)
      				maxHeight = dRandomIn(2, 3);
      			else
      				maxHeight = dRandomIn(4, 5);
      			var currentHeight = Math.min(maxHeight, startOffset + time);
      			//console.log("current height is " + currentHeight + ", max height is " + maxHeight);
      			//console.log("placement = " + placement);
      			if (currentHeight > 0)
      				drawPlant(placement, currentHeight, 'o');
      			placement += dRandomIn(1, 3);
      		}
      	}


      	function drawPlant(plantX, height, apexCharacter) {
      		var y = plantHeight - 4;
      		var resetSeed = seed;
      		console.log("drawing plant at " + plantX);
      		for (var i = 0; i < height - 1; i ++) {
      			plantCharacter[plantX][y] = '|';
      			y --;
      		}
      		plantCharacter[plantX][y] = apexCharacter;
      		seedDRand(resetSeed);
      	}


      	function makeClouds() {
      		var resetSeed = seed;

      		var cloud = ['-', '+', ' ', ' ', ' '];
      		for (var y = 0; y < 3; y ++) {
      			var cloudRow = [];
      			for (var i = 0; i < 3 * plantWidth; i ++)
      				cloudRow.push(pick(cloud));
      			for (var x = 0; x < plantWidth; x ++) {
      				if (plantCharacter[x][y - 1] != ' ')
      					plantCharacter[x][y] = cloudRow[(plantStep + x) % (3 * plantWidth)];
      			}
      		}

      		seed = resetSeed;
      	}


      	function makeStoppedDisplay() {
      		var resetSeed = seed;

      		var pendant = ['\\', '\/', ' '];
      		for (var y = 0; y < 8; y ++) {
      			for (var x = 0; x < plantWidth; x ++) {
      				if (y == 0)
      					plantCharacter[x][y] = pick(pendant);
      				else if (plantCharacter[x][y - 1] != ' ')
      					plantCharacter[x][y] = pendant[(x + y) % 2];
      			}
      		}

      		var ascender = ['^', '^', ' '];
      		for (var y = plantHeight - 1; y > plantHeight - 9; y --) {
      			for (var x = 0; x < plantWidth; x ++) {
      				if (y == plantHeight - 1)
      					plantCharacter[x][y] = pick(ascender)
      				else if (
      				(plantCharacter[x][y + 1] != ' ')
      				&& (plantCharacter[(x - 1 + plantWidth) % plantWidth][y + 1] != ' ')
      				&& (plantCharacter[(x + 1) % plantWidth][y + 1] != ' '))

      					plantCharacter[x][y] = '^';
      			}
      		}

      		seed = resetSeed;
      	}


      	function makeInitialDisplay() {
      		var header = "homepage";
      		for (var y = 0; y < plantHeight; y ++) {
      			for (var x = 0; x < plantWidth; x ++) {
      				if (y < plantHeight - 3)
      					plantCharacter[x][y] = ' ';
      				else if (y % 2 == 0)
      					plantCharacter[x][y] = '-';
      				else
      					plantCharacter[x][y] = header.charAt(x);
      			}
      		}

      	}


      	var resetSeed = seed;


      	function replaceWithNonbreakingSpaces(input) {
      		input.replace(/' '/g, '.');
      		return input;
      	}


      	function convertArrayToHTML(array) {
      		var string = "";
      		for (var y = 0; y < plantHeight; y ++) {
      			for (var x = 0; x < plantWidth; x ++) {
      				string += plantCharacter[x][y];
      			}
      			string += "<br>";
      		}
      		return string;
      	}
      }

      //----------------------------------------------------------------------------//

    </script>
    <script>
      var a = 1664525;
      var c = 1013904223;
      var seed = 1234;


      //function seedDeterministicRandomNumberGenerator(newSeed) {
      function seedDRand(newSeed) {
      	seed = newSeed;
      	//console.log("seed = " + seed + "\n");
      }


      function dRandom() {
        // define the recurrence relationship
        seed = parseInt(a * seed + c) % 982451497;
        // return an integer
        // Could return a float in (0, 1) by dividing by m
        return seed;
      }


      // helper function which returns an integer from 0 to spread - 1
      // for 4 it would be 0, 1, 2, or 3 (not 4)
      function dRandomInt(spread) {
      	return (dRandom() % spread);
      }


      // returns an integer from min to max (inclusive)
      function dRandomIn(min, max) {
      	return min + dRandom() % (max - min + 1);
      }


      // return a float in the 0-1 range
      function dRandomFloat() {
      	return dRandom() / 982451497;
      }


      // return a float in the 0-1 range
      function dRandomFloatIn(min, max) {
      	return min + (max - min) * dRandom() / 982451497;
      }


      // uses the fibonacci sequence to generate pseudorandom numbers
      function fibonacci(a, b) {
      	var period = Math.pow(10, 6);
      	//console.log("testing fibonacci sequence. inputs are " + a + " and " + b);
      	var iterations = 128;
      	a += 552219;
      	var c;
      	for (var i = 0; i < iterations; i ++) {
      		c = a + b;
      		if (c > period)
      			c = c % period;
      		a = b;
      		b = c;
      		//console.log(c);
      	}
      	return b;
      }

    </script>
    <script>
      var storedSeed = Math.floor(Math.random() * 2983742);

      step();

      seedDRand(storedSeed);
      setupGrowingPlant(document.getElementById("plant div"), false);

      var contact = "<br>@voidflowers<br><br><br>";

      refresh();


      function step() {
        seedDRand(storedSeed);
        setupGrowingPlant(document.getElementById("plant div"), true);
      }


      function end() {
        seedDRand(storedSeed);
        setupGrowingPlant(document.getElementById("plant div"), false);
      }


      function pick(array) {
        var index = dRandom() % array.length;
        //console.log("index = " + index);
      return array[index];
      }


      // an integer from the low to the high value specified, includsive
      function randomIntIn(low, high) {
        return low + Math.floor((high - low + 1) * Math.random());
      }


      // an integer from 0 to the high value, noninclusive
      function randomInt(range) {
        return Math.floor(range * Math.random());
      }

    </script>
  </head>

  <body>
    <div id="container" class="container" style="max-width: 768px;">
      <button type="button" onclick="step()" style="float:right">flowers</button>
      <% if Current.user %>
      <button type="button" onclick="location.href = '/projects/new';" style="marin: 0 auto; display: block;">new project</button>
      <button type="button" onclick="location.href = '/user';" style="float:left">user</button>
      <% end %>
      <div id="plant div" class="header">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>-------------------------------------------------------------------------------- <br>homepage <br>-------------------------------------------------------------------------------- <br>
      </div>
      <br>
      <div id="list" style="max-width: 768px;">
        <div class="project" style="height: 128px;">
          <% if !(@song.nil?) %>
          <iframe src="<%= @song.link %>" frameBorder = "0" width="80" height="80px" style="float: left; margin-right: 8px;" allow="autoplay; encrypted-media; picture-in-picture"></iframe>
          <div>
            <div><%= @song.title %><div class="date" style="float: right;">recently played</div>
            </div>by <%= @song.artist %><br/><br/>album: <%= @song.album %>
          </div>
          <div class="link" style="left: 136px; vertical-align: bottom;">
          </div>
          <p style="text-align: center;"> --- --- --- </p>
        </div>
        <% end %>
        <% @projects.each do |project| %>
        <div class="project" style="height: 128px;">
          <img src="<%= url_for(project.image) %>" width="128px" height="128px" style="float: left; margin-right: 8px;">
          <div>
            <div><%= project.title %> <div class="date" style="float: right;"><%= project.date_year %></div>
            </div>
            <br> <%= project.description%>
          </div>
          <div class="link" style="left: 136px; vertical-align: bottom;">
            <a href="<%= project.project_url %>"><%= project.project_url %></a>
            <br>
          </div>
        </div>
        <% end %>
        <br>
        <br> <br>
        <br>
        <br>
      </div>
    </div>
    <script>
      // <button type="button" onclick="refresh()" > list < /button>
      var storedSeed = Math.floor(Math.random() * 2983742);
      step();
      seedDRand(storedSeed);
      setupGrowingPlant(document.getElementById("plant div"), false);
      var contact = " < br > @volfril < br > < br > < br > ";
      refresh();

      function step() {
        seedDRand(storedSeed);
        setupGrowingPlant(document.getElementById("plant div"), true);
      }

      function end() {
        seedDRand(storedSeed);
        setupGrowingPlant(document.getElementById("plant div"), false);
      }

      function pick(array) {
        var index = dRandom() % array.length;
        //console.log("index = " + index);
        return array[index];
      }
      // an integer from the low to the high value specified, includsive
      function randomIntIn(low, high) {
        return low + Math.floor((high - low + 1) * Math.random());
      }
      // an integer from 0 to the high value, noninclusive
      function randomInt(range) {
        return Math.floor(range * Math.random());
      }
      // make an html list containing all the projects
      // we'll probably be passing in an array of project information
      function list(divName, project) {
        // get the container to put all the project entries in
        var parentDiv = document.getElementById(divName);
        // match width to header (which is 80 characters wide
        var plantDiv = document.getElementById("plant div");
        parentDiv.style.maxWidth = plantDiv.clientWidth + "px";
        document.getElementById("container").style.maxWidth = plantDiv.clientWidth + "px";
        parentDiv.innerHTML = "";
        for (var i = 0; i < project.length; i++) {
          var projectDiv = document.createElement("div");
          projectDiv.style.height = project[i].size + "px";
          projectDiv.className = "project";
          //projectDiv.style.border = "thin solid #000000";
          parentDiv.appendChild(projectDiv);
          // image
          var thumbnail = document.createElement("img");
          thumbnail.src = baseThumbnailPath + project[i].imagePath;
          thumbnail.style.float = "left";
          thumbnail.style.marginRight = "8px";
          projectDiv.appendChild(thumbnail);
          // text
          var textDiv = document.createElement("div");
          //textDiv.style.border = "thin solid #000000";
          var titleDiv = document.createElement("div");
          //titleDiv.style.float = "left";
          titleDiv.innerHTML += project[i].name;
          textDiv.appendChild(titleDiv);
          var dateDiv = document.createElement("div");
          dateDiv.className = "date";
          dateDiv.style.float = "right";
          if (typeof project[i].date == "object") dateDiv.innerHTML += month[project[i].date.getMonth()] + " " + project[i].date.getFullYear();
          else dateDiv.innerHTML += project[i].date;
          titleDiv.appendChild(dateDiv);
          textDiv.innerHTML += " < br > ";
          textDiv.innerHTML += project[i].description;
          projectDiv.appendChild(textDiv);
          if (project[i].link != undefined) {
            var linkDiv = document.createElement("div");
            linkDiv.className = "link";
            linkDiv.style.left = project[i].size + 8 + "px";
            // see if we can find a float bottom option
            linkDiv.style.verticalAlign = "bottom";
            var linkLabel = project[i].link;
            if (linkLabel.length > 56) linkLabel = linkLabel.substring(0, 56) + "...";
            linkDiv.innerHTML = " < a href = \"" + project[i].link + "\">" + linkLabel + "</a> < br > ";
            projectDiv.appendChild(linkDiv);
            parentDiv.innerHTML += contact;

          }
          parentDiv.innerHTML += " < br > ";
          parentDiv.innerHTML += contact;

        }
      }
    </script>
  </body>
</html>
